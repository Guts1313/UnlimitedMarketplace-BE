stages:
  - build
  - test
  - dockerize
  - deploy

variables:
  DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG

build:
  stage: build
  image: gradle:7.3-jdk11
  script:
    - gradle build -x test
  artifacts:
    paths:
      - build/libs/
    expire_in: 1 hour

test:
  stage: test
  image: gradle:7.3-jdk11
  script:
    - gradle test

dockerize:
  stage: dockerize
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE_NAME .
    - docker push $DOCKER_IMAGE_NAME
  only:
    - main

deploy_staging:
  stage: deploy
  image: docker:19.03.12
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    # Assuming your deployment involves pulling the Docker image and running it
    - docker pull $DOCKER_IMAGE_NAME
    # Example deployment command; adjust based on your deployment environment specifics
    - echo "Deploying image $DOCKER_IMAGE_NAME to staging environment..."
    # Add actual deployment commands here
  environment:
    name: staging
    url: http://staging.example.com
  only:
    - main
